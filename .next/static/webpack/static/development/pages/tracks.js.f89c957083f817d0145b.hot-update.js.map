{"version":3,"file":"static/webpack/static/development/pages/tracks.js.f89c957083f817d0145b.hot-update.js","sources":["webpack:///./pages/tracks.js"],"sourcesContent":["import Layout from '../components/MyLayout.js'\nimport React from 'react'\nimport Link from 'next/link'\nimport Router, { withRouter } from 'next/router';\nimport { ACCESS_TOKEN } from '../constants';\n\nexport default class Tracks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tracks: null,\n      access_token: null,\n    }\n  }\n\n  componentDidMount (props) {\n    const access_token = Router.router.query.access_token;\n    this.setState({access_token: access_token})\n    const playlist_id = Router.router.query.playlist_id;\n    let tracks = null;\n    if (access_token !== null) {\n      fetch(`https://api.spotify.com/v1/playlists/${playlist_id}/tracks`, {\n          headers: {\n            'Authorization': 'Bearer ' + access_token\n          }\n      }).then(res => res.json())\n        .then(response => this.handleTrackListResponse(response.items)) \n        .catch(error => console.error('Error:', error));        \n    } else {\n      alert(\"you are not logged in\");\n    }\n  }\n\n  handleTrackListResponse = (tracklist) => {\n    this.setState({tracks: tracklist})\n    let idList = '';\n\n    for (let index = 0; index < tracklist.length; index++) {\n      idList += tracklist[index].track.id + ',';\n      \n    }\n    this.getTrackAudioFeatures(idList); \n}\n\n\n  getTrackAudioFeatures = (idBlob) => {\n      fetch(`https://api.spotify.com/v1/audio-features/?ids=${idBlob}`, {\n        headers: {\n          'Authorization': 'Bearer ' + this.state.access_token\n        }\n    }).then(res => res.json())\n      .then(response => this.createTrackInfoObject(response)) \n      .catch(error => console.error('Error:', error));  \n  }\n\n\n\n  createTrackInfoObject = (audioFeatures) => {\n    const tracklist = this.state.tracks\n\n      \n    for (let i = 0; i < audioFeatures.length; i++) {\n      console.log('this is working');\n      \n      for (let j = 0; j < this.state.tracks.length; j++) {\n        console.log('this is working too');\n        \n        console.log('tracklist id ', tracklist[j].track.id);\n        console.log(audioFeatures[i].id);\n        \n        \n        if(tracklist[j].track.id === audioFeatures[i].id) {\n            console.log(\"YAYYYYYYY\", tracklist[j].track.id, audioFeatures[i].id);\n            \n        }\n      }      \n    }\n  }\n\n\n  render () {\n    let playlists = this.state.tracks;\n    console.log(playlists);\n    \n    return  (\n          <Layout>\n             <p>Tracks</p>\n          </Layout>\n      )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA2BA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AApCA;AAuCA;AACA;AACA;AADA;AADA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AA/CA;AAmDA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AArEA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AADA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAiDA;AACA;AACA;AAEA;AAKA;;;;AAnFA;AACA;;;;;A","sourceRoot":""}