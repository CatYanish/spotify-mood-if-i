{"version":3,"file":"static/webpack/static/development/pages/index.js.0927bbc0c61c15f4cdd3.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react'\nimport Layout from '../components/MyLayout.js'\nimport Link from 'next/link'\nimport Router, { withRouter } from 'next/router';\nimport { CLIENT_ID, REDIRECT_URI } from '../keys';\nimport { STATE_KEY, ACCESS_TOKEN } from '../constants';\n\n\nclass Blog extends React.Component {\n    constructor (props) {\n      super(props);\n      this.state = {\n        triedToLogIn: false,\n        accessToken: null,\n        error: null,\n      }\n    }\n\n    componentDidMount () {\n      console.log(sessionStorage.getItem(ACCESS_TOKEN));\n      // if (sessionStorage.getItem(ACCESS_TOKEN) !== null && sessionStorage.getItem(ACCESS_TOKEN) !== undefined ) {\n      //      window.location = '/playlists';\n      // };\n    }\n\n   handleLogin () {\n         function getHashParams() {\n           var hashParams = {};\n           if (typeof window !== \"undefined\") {\n             var e, r = /([^&;=]+)=?([^&;]*)/g,\n                 q = window.location.hash.substring(1);\n             while ( e = r.exec(q)) {\n                hashParams[e[1]] = decodeURIComponent(e[2]);\n             }\n           }\n           return hashParams;\n         }\n\n         function generateRandomString(length) {\n           var text = '';\n           var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n           for (var i = 0; i < length; i++) {\n             text += possible.charAt(Math.floor(Math.random() * possible.length));\n           }\n           return text;\n         };\n\n\n         let params = getHashParams();\n         console.log({params});\n         let access_token = params.access_token,\n             state = params.state,\n             storedState = sessionStorage.getItem(STATE_KEY);\n        console.log(access_token);\n\n         if (access_token && (state == null || state !== storedState)) {\n           alert('There was an error during the authentication');\n         } else {\n           sessionStorage.removeItem(STATE_KEY);\n           if (access_token) {\n             console.log('hiiii');\n             fetch('https://api.spotify.com/v1/me', {\n                 headers: {\n                   'Authorization': 'Bearer ' + access_token\n                 }\n             }).then(res => res.json())\n               .then(response => console.log('Success:', JSON.stringify(response)))\n               .catch(error => console.error('Error:', error));;\n           }\n         }\n\n     const client_id = CLIENT_ID; // Your client id\n     const redirect_uri = REDIRECT_URI; // Your redirect uri\n\n     state = generateRandomString(16);\n\n     sessionStorage.setItem(STATE_KEY, state);\n     console.log(access_token);\n     sessionStorage.setItem(ACCESS_TOKEN, access_token);\n     const scope = 'user-read-private playlist-read-private user-read-email';\n\n     let url = 'https://accounts.spotify.com/authorize';\n     url += '?response_type=token';\n     url += '&client_id=' + encodeURIComponent(client_id);\n     url += '&scope=' + encodeURIComponent(scope);\n     url += '&redirect_uri=' + encodeURIComponent(redirect_uri);\n     url += '&state=' + encodeURIComponent(state);\n\n     // window.location = '/playlists';\n   }\n\n  render() {\n    return (\n      <Layout>\n        <div id=\"login\">\n          <button onClick={this.handleLogin} className=\"btn btn-primary\">Log in with Spotify</button>\n        </div>\n        { this.state.error !== null && this.state.triedToLogIn === true &&\n          <div>\n            Login was not successful, please try again or come back later\n          </div>\n        }\n        <style jsx>{`\n          h1,\n          a {\n            font-family: 'Arial';\n          }\n\n          a {\n            text-decoration: none;\n            color: blue;\n          }\n\n          a:hover {\n            opacity: 0.6;\n          }\n        `}</style>\n      </Layout>\n    )\n  }\n}\n\n\nexport default withRouter(Blog);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AADA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AALA;AAAA;AA0BA;;;;AAhHA;AACA;AAmHA;;;;A","sourceRoot":""}