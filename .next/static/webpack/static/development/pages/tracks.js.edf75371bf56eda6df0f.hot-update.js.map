{"version":3,"file":"static/webpack/static/development/pages/tracks.js.edf75371bf56eda6df0f.hot-update.js","sources":["webpack:///./pages/tracks.js"],"sourcesContent":["import Layout from '../components/MyLayout.js'\nimport React from 'react'\nimport Link from 'next/link'\nimport Router, { withRouter } from 'next/router';\nimport { ACCESS_TOKEN } from '../constants';\n\nexport default class Tracks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tracks: null,\n    }\n  }\n\n\n  componentDidMount (props) {\n    function getHashParams() {\n      var hashParams = {};\n      console.log('GET HASH PARAMS');\n      \n        var e, r = /([^&;=]+)=?([^&;]*)/g,\n            q = window.location.hash.substring(1);\n        while ( e = r.exec(q)) {\n           hashParams[e[1]] = decodeURIComponent(e[2]);\n        }\n\n      return hashParams;\n    }\n\n    let params = getHashParams();\n    console.log({params});\n    \n    let access_token = params.access_token\n\n  //   if (access_token !== null) {\n  //     fetch(`https://api.spotify.com/v1/playlists/${playlist_id}/tracks`, {\n  //         headers: {\n  //           'Authorization': 'Bearer ' + access_token\n  //         }\n  //     }).then(res => res.json())\n  //       .then(response => console.log(response))\n  //       .catch(error => console.error('Error:', error));\n  //   } else {\n  //     alert(\"you are not logged in\");\n  //   }\n\n\n\n  //  // audio features for up to 100 songs at a TimeRanges. \n  //   \"https://api.spotify.com/v1/audio-features/?ids=4JpKVNYnVcJ8tuMKjAj50A,2NRANZE9UCmPAS5XVbXL40,24JygzOLM0EmRQeGtFcIcG\"\n\n\n  }\n\n\n  render () {\n    let playlists = this.state.playlists;\n    return  (\n          <Layout>\n             <p>Tracks</p>\n          </Layout>\n      )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAGA;;;AAGA;AACA;AACA;AAKA;;;;AAxDA;AACA;;;;;A","sourceRoot":""}